{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport { fetchCollectionsStart } from \"./shop/shop.sagas\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart());\nexport const persistor = persistStore(store); // export default {store, persistor};","map":{"version":3,"sources":["/Users/mac/Documents/study-projects/clothing-store/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","thunk","createSagaMiddleware","rootReducer","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,qBAAR,QAAoC,mBAApC;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACzCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD;;AAED,OAAO,MAAMW,KAAK,GAAGd,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,qBAAqB,EAAxC;AAEA,OAAO,MAAMS,SAAS,GAAGd,YAAY,CAACY,KAAD,CAA9B,C,CAEP","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\nimport {persistStore} from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./root-reducer\"\nimport {fetchCollectionsStart} from \"./shop/shop.sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development'){\n  middlewares.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(fetchCollectionsStart());\n\nexport const persistor = persistStore(store);\n\n// export default {store, persistor};"]},"metadata":{},"sourceType":"module"}