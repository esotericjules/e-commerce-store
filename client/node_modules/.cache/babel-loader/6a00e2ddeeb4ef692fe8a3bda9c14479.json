{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get(); // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  //\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)) )\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/mac/Documents/study-projects/clothing-store/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","shopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapshot","get","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,QAA8B,oBAA9B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAHuC,CAKvC;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMZ,SAAS,CACbE,eAAe,CAACW,uBADH,EAEbN,qBAFa,CAAf;AAID","sourcesContent":["import {takeEvery, call} from 'redux-saga/effects';\nimport shopActionTypes from './shop.types'\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectionsFailure, fetchCollectionsSuccess} from \"./shop.actions\";\n\n\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  \n  const snapshot = yield collectionRef.get();\n   \n  // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  //\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)) )\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  )\n}"]},"metadata":{},"sourceType":"module"}