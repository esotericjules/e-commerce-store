{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch {} // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  //\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)) )\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/mac/Documents/study-projects/clothing-store/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","shopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACK,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACD,GAND,CAME,MAAM,CAEP,CATsC,CAavC;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMd,SAAS,CACbG,eAAe,CAACY,uBADH,EAEbP,qBAFa,CAAf;AAID","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects';\nimport shopActionTypes from './shop.types'\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectionsFailure, fetchCollectionsSuccess} from \"./shop.actions\";\n\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n  \n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap))\n  } catch {\n  \n  }\n \n  \n  \n  // collectionRef.get().then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //\n  //   dispatch(fetchCollectionsSuccess(collectionsMap));\n  //\n  // }).catch(error => dispatch(fetchCollectionsFailure(error.message)) )\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  )\n}"]},"metadata":{},"sourceType":"module"}