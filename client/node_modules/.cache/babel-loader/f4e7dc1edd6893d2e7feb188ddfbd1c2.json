{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/mac/Documents/study-projects/clothing-store/src/redux/shop/shop.sagas.js"],"names":["takeEvery","shopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,UAAMC,cAAc,GAAGV,+BAA+B,CAACS,QAAD,CAAtD;AAEAE,IAAAA,QAAQ,CAACR,uBAAuB,CAACO,cAAD,CAAxB,CAAR;AAED,GALD,EAKGE,KALH,CAKSC,KAAK,IAAIF,QAAQ,CAACT,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAL1B;AAMD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,SAAS,CACbC,eAAe,CAACiB,uBADH,EAEbZ,qBAFa,CAAf;AAID","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\nimport shopActionTypes from './shop.types'\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectionsFailure, fetchCollectionsSuccess} from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  \n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    \n    dispatch(fetchCollectionsSuccess(collectionsMap));\n    \n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)) )\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    shopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  )\n}"]},"metadata":{},"sourceType":"module"}