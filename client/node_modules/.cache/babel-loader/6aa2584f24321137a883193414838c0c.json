{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/study-projects/clothing-store/client/src/components/sign-up/sign-up.components.jsx\";\nimport React, { useState } from 'react';\nimport \"./sign-up.styles.scss\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { signUpStart } from \"../../redux/user/user.action\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'sign-up',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: 'text',\n    name: 'displayName',\n    value: displayName,\n    onChange: handleChange,\n    label: 'Display Name',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: 'email',\n    name: 'email',\n    value: email,\n    onChange: handleChange,\n    label: 'Email',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: 'password',\n    name: 'password',\n    value: password,\n    onChange: handleChange,\n    label: 'Password',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: 'password',\n    name: 'confirmPassword',\n    value: confirmPassword,\n    onChange: handleChange,\n    label: 'Confirm Password',\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: 'submit',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredential => dispatch(signUpStart(userCredential))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/mac/Documents/study-projects/clothing-store/client/src/components/sign-up/sign-up.components.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredential"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport \"./sign-up.styles.scss\"\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport {signUpStart} from \"../../redux/user/user.action\";\nimport {connect} from \"react-redux\";\n\nconst SignUp = ({signUpStart}) =>  {\n  \n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {displayName, email, password, confirmPassword} = userCredentials;\n  \n  const handleSubmit = event=> {\n      event.preventDefault();\n  \n      \n      if (password !== confirmPassword){\n        alert(\"passwords don't match\");\n        return;\n      }\n      \n      signUpStart({email, password, displayName});\n      \n  };\n  \n  const handleChange = event => {\n    const {name, value} = event.target;\n  \n    setUserCredentials({...userCredentials, [name]: value});\n  }\n  \n    return (\n      <div className={'sign-up'}>\n        <h2 className=\"title\">I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n          <FormInput\n            type={'text'}\n            name={'displayName'}\n            value={displayName}\n            onChange={handleChange}\n            label={'Display Name'}\n            required\n            />\n          <FormInput\n            type={'email'}\n            name={'email'}\n            value={email}\n            onChange={handleChange}\n            label={'Email'}\n            required\n          />\n          <FormInput\n            type={'password'}\n            name={'password'}\n            value={password}\n            onChange={handleChange}\n            label={'Password'}\n            required\n          />\n          <FormInput\n            type={'password'}\n            name={'confirmPassword'}\n            value={confirmPassword}\n            onChange={handleChange}\n            label={'Confirm Password'}\n            required\n          />\n          <CustomButton type={'submit'}>\n            Sign Up\n          </CustomButton>\n        \n        </form>\n      </div>\n    );\n  };\n\nconst mapDispatchToProps = dispatch => ({\n   signUpStart: (userCredential) => dispatch(signUpStart(userCredential)),\n})\n\nexport default  connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}