{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { emailSignInFailure, emailSignInSuccess, googleSignInFailure, googleSignInStart, googleSignInSuccess } from \"./user.action\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n    console.log(userRef);\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n    console.log(userRef);\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/mac/Documents/study-projects/clothing-store/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","emailSignInFailure","emailSignInSuccess","googleSignInFailure","googleSignInStart","googleSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","console","log","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAAyC,oBAAzC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,mBAHF,EAIEC,iBAJF,EAKEC,mBALF,QAMO,eANP;AASA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMT,IAAI,CAACU,eAAL,CAAqBT,cAArB,CAArB;AACA,UAAMU,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACW,mBAAmB,CAAC;AAACO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,GAND,CAME,OAAOO,KAAP,EAAa;AACb,UAAMtB,GAAG,CAACS,mBAAmB,CAACa,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUa,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC7D,MAAI;AACF,UAAM;AAACf,MAAAA;AAAD,QAAS,MAAMT,IAAI,CAACyB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMb,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACQ,kBAAkB,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAAnB,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,GAND,CAME,OAAOO,KAAP,EAAa;AACb,UAAMtB,GAAG,CAACO,kBAAkB,CAACe,KAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUQ,kBAAV,GAA8B;AACnC,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAM/B,GAAG,CAAC,CAACC,IAAI,CAACqB,mBAAD,CAAL,EAA4BrB,IAAI,CAAC4B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import {takeLatest, put, all, call} from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport {auth, googleProvider, createUserProfileDocument} from \"../../firebase/firebase.utils\";\nimport {\n  emailSignInFailure,\n  emailSignInSuccess,\n  googleSignInFailure,\n  googleSignInStart,\n  googleSignInSuccess\n} from \"./user.action\";\n\n\nexport function* signInWithGoogle() {\n  try {\n    const {user} = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    console.log(userRef);\n  } catch (error){\n    yield put(googleSignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n    console.log(userRef);\n  } catch (error){\n    yield put(emailSignInFailure(error))\n  }\n}\n\nexport function* onEmailSignInStart(){\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}