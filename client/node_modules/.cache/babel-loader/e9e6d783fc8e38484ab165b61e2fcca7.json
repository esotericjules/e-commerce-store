{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop; // console.log(selectShop)\n\n\nexport const selectCollections = createSelector([selectShop], shop => {\n  // console.log(shop.collections)\n  return shop.collections;\n}); // console.log(selectCollections)\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => {\n  // console.log(collections[key])\n  return collections[key];\n}) : []);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null));\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);","map":{"version":3,"sources":["/Users/mac/Documents/study-projects/clothing-store/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC,C,CACA;;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC7C,CAACE,UAAD,CAD6C,EAE7CE,IAAI,IAAG;AACL;AACA,SAAQA,IAAI,CAACE,WAAb;AACD,CAL4C,CAAxC,C,CAQP;;AAEA,OAAO,MAAMC,2BAA2B,GAAGP,cAAc,CACvD,CAACK,iBAAD,CADuD,EAEvDC,WAAW,IAAGA,WAAW,GAAIE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAI;AAC/D;AACA,SAAOL,WAAW,CAACK,GAAD,CAAlB;AACD,CAH4B,CAAJ,GAGpB,EALkD,CAAlD;AAQP,OAAO,MAAMC,gBAAgB,GAAGX,OAAO,CAAEY,kBAAD,IACtCb,cAAc,CACZ,CAACK,iBAAD,CADY,EAEZC,WAAW,IAAMA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAsC,IAFtD,CADuB,CAAhC;AAQP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACtD,CAACE,UAAD,CADsD,EAEtDE,IAAI,IAAIA,IAAI,CAACW,UAFyC,CAAjD","sourcesContent":["import {createSelector} from \"reselect\";\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop;\n// console.log(selectShop)\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop =>{\n    // console.log(shop.collections)\n    return  shop.collections\n  }\n\n)\n// console.log(selectCollections)\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>collections ?  Object.keys(collections).map(key => {\n    // console.log(collections[key])\n    return collections[key]\n  }) : []\n);\n\nexport const selectCollection = memoize((collectionUrlParam) =>\n  createSelector(\n    [selectCollections],\n    collections  => (collections ? collections[collectionUrlParam]  : null)\n    \n  )\n);\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n)\n\n"]},"metadata":{},"sourceType":"module"}